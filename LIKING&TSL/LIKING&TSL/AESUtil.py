#!/usr/bin/env python
# -*- coding:utf-8 -*-

from Crypto.Cipher import AES
from binascii import b2a_hex, a2b_hex


class AESUtil:
    def __init__(self, key ,iv):
        self.key = key
        self.iv = iv
        self.mode = AES.MODE_CBC
        self.BS = AES.block_size
        # 补位
        self.pad = lambda s: s + (self.BS - len(s) % self.BS) * chr(self.BS - len(s) % self.BS)
        self.unpad = lambda s: s[0:-ord(s[-1])]

    def encrypt(self, text):

        text = self.pad(text)
        cryptor = AES.new(self.key, self.mode, self.iv)
        # 目前AES-128 足够目前使用

        ciphertext = cryptor.encrypt(text)
        # 把加密后的字符串转化为16进制字符串
        # return ciphertext
        return b2a_hex(ciphertext)

        # 解密后，去掉补足的空格用strip() 去掉

    def decrypt(self, text):
        cryptor = AES.new(self.key, self.mode, self.key)
        plain_text = cryptor.decrypt(text)
        #plain_text = cryptor.decrypt(a2b_hex(text))
        return plain_text
        # return self.unpad(plain_text.rstrip('\0'))




# if __name__ == '__main__':
#     iv = "8Rt9Cxg3e4VjQqak"
#     print('iv:', b2a_hex(iv))
#     #iv ="8Rt9Cxg3e4VjQqak"
#
#     pc = AESUtil('5vu4cYhDizqcgRjX',iv)  # 初始化密钥 和 iv
#     # import sys
#     # import data
#     # import json
#     # data = data.data()
#     # text = json.dumps(data)
#
#
#
#     # print(json)
#
#
#     #print("原文%d:%s" % (len(src), src))
#     # encrypt = pc.encrypt(text)  # 加密
#     # print((len(encrypt), encrypt))
#     decrypt = pc.decrypt('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'))
#     # decrypt = pc.decrypt(b2a_hex('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'
#                                  #))
#     print(decrypt)

